{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'RUNAWAY-REGEX-TEST/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\n# PD                        = require 'pipedreams'\n# { $, $async, }            = PD\n#...........................................................................................................\n# sre_1                     = require 'safe-regex'\nsre_2                     = require 'safe-regex2'\nRe2                       = require 're2'\n{ to_width\n  width_of }              = require 'to-width'\n\n\n#.........................................................................................................\nmatch_against_re = ( n, text, re ) ->\n  t0    = process.hrtime()\n  # text.match re for _ in [ 1 .. n ]\n  # re.test text for _ in [ 1 .. n ]\n  re.exec text for _ in [ 1 .. n ]\n  t1    = process.hrtime()\n  t0bi  = BigInt \"#{t0[ 0 ]}#{\"#{t0[ 1 ]}\".padStart 9, '0'}\"\n  t1bi  = BigInt \"#{t1[ 0 ]}#{\"#{t1[ 1 ]}\".padStart 9, '0'}\"\n  return ( parseInt ( t1bi - t0bi ), 10 ) / 1e6\n\n#.........................................................................................................\nmatch_against_re2 = ( n, text, re ) ->\n  t0    = process.hrtime()\n  # text.match re for _ in [ 1 .. n ]\n  # re.test text for _ in [ 1 .. n ]\n  re.exec text for _ in [ 1 .. n ]\n  t1    = process.hrtime()\n  t0bi  = BigInt \"#{t0[ 0 ]}#{\"#{t0[ 1 ]}\".padStart 9, '0'}\"\n  t1bi  = BigInt \"#{t1[ 0 ]}#{\"#{t1[ 1 ]}\".padStart 9, '0'}\"\n  return ( parseInt ( t1bi - t0bi ), 10 ) / 1e6\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"regex performance, runaway test\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    ['^number',true,null]\n    ['^numberfgasiufdgaskjfgasjgfalsgfjadgfjgfajsgfjsgdfajsdfjasgdfhasgdfhas',true,null]\n    ['<numberfgasiufdgaskjfgasjgfalsgfjadgfjgfajsgfjsgdfajsdfjasgdfhasgdfhas',true,null]\n    ['^73982749823423j4hk2hdakjsdhasiuzdfiuwzrwjhfdkjasbdf',true,null]\n    [\"^prfxsjfskjfgiwefskjfszwre:foorweizowrzeruwerwmebrmwerwr<yxh<\",true,null]\n    [\"<prfxsjfskjfgiwefskjfszwre:foorweizowrzeruwerwmebrmwerwr<yxh<\",true,null]\n    [\"tzieuztksdhfjxdlkjasgfagsdjagsdlkfjahsdkga:yjgfhgdfyajdgkajgkjgrrr\",true,null]\n    [\">prfxsjfskjfgiwefskjfszwre:foorweizowrzeruwerwmebrmwerwr<yxh<\",true,null]\n    [\"<>prfxsjfskjfgiwefskjfszwre:foorweizowrzeruwerwmebrmwerwr<yxh<\",true,null]\n    [\"<>^prfxsjfskjfgiwefskjfszwre:foorweizowrzeruwerwmebrmwerwr<yxh<\",true,null]\n    [\"^<>\",true,null]\n    [\"#stamped\",true,null]\n    [\"#stampedashfisfiuhsdfkjskdfkjsf\",true,null]\n    [\"aaaaaaaaay\",true,null]\n    [\"aaaaaaaaaaaaa\",true,null]\n    [\"aaaaaaaaaaaaab\",true,null]\n    [\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy\",true,null]\n    [\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxyxxxxxxxxxxxxxxxxxxxxxxxyxyxyyxyxyxyx\",true,null]\n    ]\n  #.........................................................................................................\n  n         = 1e4\n  patterns  =\n    simple:         /[aeiou][^aeiou]/\n    # datom:          PD._datom_keypattern\n    # selector:       PD._selector_keypattern\n    # tag:            PD._tag_pattern\n    catastrophic1:  /(a+){10}y/\n    catastrophic2:  /(x+x+)+y/\n    catastrophic3:  /(a+)+$/\n    catastrophic4:  /(a|a)+$/\n    # catastrophic5:  /(.*){1,10}[bc]/ ### too bad, neverr finishes ###\n  dtA_sum = 0\n  dtB_sum = 0\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      for key, re of patterns\n        re2 = new Re2 re\n        #...................................................................................................\n        dtA       = match_against_re  n, probe, re\n        dtB       = match_against_re2 n, probe, re2\n        dtA_sum  += dtA\n        dtB_sum  += dtB\n        # dtB = 1000\n        rel = dtB / ( Math.max dtA, 1e-3 )\n        #...................................................................................................\n        dtA_txt = ( to_width ( dtA.toFixed 3 ), 10, { align: 'right', } )\n        dtB_txt = ( to_width ( dtB.toFixed 3 ), 10, { align: 'right', } )\n        rel_txt = ( to_width ( rel.toFixed 3 ), 10, { align: 'right', } )\n        rel_txt = ( if dtB > dtA then CND.red else CND.green ) rel_txt\n        #...................................................................................................\n        debug 'µ34322', ( to_width key, 20 ), dtA_txt, dtB_txt, rel_txt\n      resolve true\n  debug 'µ22311', \"dtA_sum\", dtA_sum / 1000\n  debug 'µ22311', \"dtB_sum\", dtB_sum / 1000\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nis_valid_Re2 = ( pattern_or_regex ) ->\n  try\n    new Re2 pattern_or_regex\n    return true\n  catch error\n    return false\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[ 'simple',     /[aeiou][^aeiou]/],[true,true,],]\n    # [[ 'PD/datom',      PD._datom_keypattern],[true,true,],]\n    # [[ 'PD/selector',   PD._selector_keypattern],[true,true,],]\n    # [[ 'PD/tag',        PD._tag_pattern],[true,true,],]\n    [[ 'x1', /(a+)+$/, ], [false,true,], ]\n    [[ 'x2', /(beep|boop)*/,], [true,true,], ]\n    [[ 'x3', /\\blocation\\s*:[^:\\n]+\\b(Oakland|San Francisco)\\b/,], [true,true,], ]\n    [[ 'x4', /(x+x+)+y/,], [false,true,], ]\n    [[ 'x5', /(a+){10}/,], [false,true,], ]\n    [[ 'x6', /(a+){10}y/,], [false,true,], ]\n    [[ 'x7', /(.*){1,320}[bc]/,], [false,true,], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ key, pattern, ] = probe\n      # debug ( CND.truth sre_1 pattern ), ( CND.truth sre_2 pattern ), ( CND.truth is_valid_Re2 pattern ), key\n      # is_safe = ( sre_1 pattern ) and ( sre_2 pattern )\n      is_safe = !!( sre_2 pattern )\n      is_re2  = ( is_valid_Re2 pattern )\n      result  = [ is_safe, is_re2, ]\n      resolve result\n    # debug new Re2 /.(?=a)/\n  done()\n  return null\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"regex performance, runaway test\" ]\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n  # x = BigInt '123456'\n  # y = BigInt '123456'\n  # debug x * y\n  # debug x ** BigInt 123\n  # t0    = process.hrtime()\n  # t1    = process.hrtime()\n  # t0bi  = BigInt \"#{t0[ 0 ]}#{\"#{t0[ 1 ]}\".padStart 9, '0'}\"\n  # t1bi  = BigInt \"#{t1[ 0 ]}#{\"#{t1[ 1 ]}\".padStart 9, '0'}\"\n  # debug t0bi\n  # debug t1bi\n  # debug parseInt ( t1bi - t0bi ), 10\n\n"
  ]
}